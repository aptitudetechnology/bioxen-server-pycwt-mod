╔═══════════════════════════════════════════════════════════════╗
║                                                               ║
║         PyCWT REST API - Setup Instructions                  ║
║                                                               ║
╚═══════════════════════════════════════════════════════════════╝

CURRENT STATUS:
  ✓ Server code created
  ✓ Configuration files ready
  ✓ Import paths fixed
  ✓ Dependencies list updated (numpy, scipy, etc.)
  ✗ Virtual environment not created yet
  ✗ Dependencies not installed yet

═══════════════════════════════════════════════════════════════

WHAT YOU NEED TO DO:

Step 1: Install python3-venv (if not installed)
────────────────────────────────────────────────
  sudo apt install python3-venv

Step 2: Run the quick setup script
────────────────────────────────────────────────
  cd /home/chris/pycwt-mod
  bash quick-setup.sh

That's it! The script will:
  - Create .venv directory
  - Install all dependencies
  - Run diagnostics automatically

═══════════════════════════════════════════════════════════════

OR, if you prefer manual control:

Step 1: Install python3-venv
  sudo apt install python3-venv

Step 2: Create virtual environment
  cd /home/chris/pycwt-mod
  python3 -m venv .venv

Step 3: Activate virtual environment
  source .venv/bin/activate

Step 4: Install dependencies
  pip install --upgrade pip
  pip install -r server/requirements.txt

Step 5: Create configuration
  cp server/.env.example server/.env

Step 6: Run diagnostics
  python diagnose-server.py

═══════════════════════════════════════════════════════════════

AFTER SETUP:

Start the server:
  source .venv/bin/activate
  python -m server.main

Test the server:
  # In another terminal
  source .venv/bin/activate
  python test-server.py

Visit the API docs:
  http://localhost:8000/docs

═══════════════════════════════════════════════════════════════

WHAT I FIXED:

1. ✓ Added src/ to Python path in all scripts
2. ✓ Added pycwt_mod dependencies (numpy, scipy, matplotlib, tqdm)
3. ✓ Added optional backend dependencies (joblib, dask)
4. ✓ Fixed syntax warning in pycwt_mod/__init__.py
5. ✓ Created quick-setup.sh for one-command installation
6. ✓ Updated all documentation

═══════════════════════════════════════════════════════════════

DEPENDENCIES THAT WILL BE INSTALLED:

Server Framework:
  - fastapi==0.104.1
  - uvicorn[standard]==0.24.0
  - pydantic==2.5.0
  - pydantic-settings==2.1.0

PyCWT Core:
  - numpy>=1.24,<2
  - scipy>=1.10,<2
  - matplotlib>=3.7,<4
  - tqdm>=4.65,<5

Optional Backends:
  - joblib>=1.3.0 (for parallel processing)
  - dask[distributed]>=2023.1.0 (for distributed computing)

Testing:
  - pytest==7.4.3
  - pytest-asyncio==0.21.1
  - httpx==0.25.1

═══════════════════════════════════════════════════════════════

Need help? Check these files:
  - SETUP.md - Detailed setup guide
  - server/README.md - Server documentation
  - server/TESTING.md - Testing guide
  - PHASE1-COMPLETE.md - Implementation summary

═══════════════════════════════════════════════════════════════
